@model LinksModel

@{
    ViewData["Title"] = "Órgão";
	Layout = "~/Views/Orgao/_Layout.cshtml";
}

<style>
	table {
		margin: 0 auto;
	}
</style>

<div id="tracker-container" style="display:none">
	<div id="container" class="container d-sm-flex" style="display:none">
		<div class="box" id="orgaoBox">
			<div class="d-flex align-items-center centralizado-no-container">
				<div class="d-flex align-items-center">
					&nbsp;
						
					<div class="d-flex">
						<input class="btn btn-link" type="button" id="voltar" value="&laquo; Voltar" onclick="ocultarGravacao()" style="display:none">
						&nbsp;
						<button class="btn btn-primary" type="button" ondblclick="aumentarTom_clickDuplo(false)" onclick="aumentarTom_click(false)">
							<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-dash-lg" viewBox="0 0 16 16">
								<path fill-rule="evenodd" d="M2 8a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 0 1h-11A.5.5 0 0 1 2 8" />
							</svg>
						</button>
							&nbsp;
						<select class="form-control" id="tomSelect" onchange="mudarTom(this.value)" style="text-align-last:center">
							@foreach (var tom in Model.TonsMaiores)
							{
								<option value="@tom">@tom</option>
							}
						</select>
						&nbsp;
						<button class="btn btn-primary" type="button" ondblclick="aumentarTom_clickDuplo(true)" onclick="aumentarTom_click(true)">
							<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
								<path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2" />
							</svg>
						</button>
					</div>

				</div>
				&nbsp;
				<div class="form-check form-switch">
					<input class="form-check-input" type="checkbox" role="switch" id="tomMenorSwitch" onchange="selecionarTomMenor(this.checked)">
					<label for="tomMenorSwitch" class="form-check-label" id="textoAcordeMenor">
						@Model.TonsMenores[(int)Model.TomIndex]
					</label>
				</div>
				&nbsp;
				<button class="btn btn-light border-primary" type="button" onclick="" style="display:none">
					<span style="color:#85AFEB">▲▼</span>
				</button>
			</div>

			<div id="textoCifrasFrame" style="display:none">
				<iframe id="textoCifras" style="width:100%"></iframe>
			</div>

			<table>
				<partial name="~/Views/Orgao/Controles.cshtml" />
				<partial name="~/Views/Orgao/Botoes.cshtml" />
			</table>
		</div>

		@*<div class="box" id="gravacaoBox" style="display:none">
			<partial name="~/Views/Orgao/Gravacao.cshtml" />
		</div>*@

		<div class="box" id="bateriaBox">
			<partial name="~/Views/Bateria/Index.cshtml" />
		</div>
	</div>
</div>

<script src="~/js/Pizzicato.min.js" asp-append-version="true"></script>

<script>
	const notasAcordesJson = JSON.parse('@Html.Raw(@Model.NotasAcordes)');
	const acordesCampoHarmonicoJson = JSON.parse('@Html.Raw(@Model.AcordesCampoHarmonico)');
	const acidentesCorrespondentesJson = JSON.parse('@Html.Raw(@Model.AcidentesCorrespondentes)');
	const acordesTons = Object.keys(acordesCampoHarmonicoJson);
	const tonsMaiores = '@Html.Raw(@Model.TonsMaioresString)'.split(', ');
	const tonsMenores = '@Html.Raw(@Model.TonsMenoresString)'.split(', ');
	
	esperarAudios(1000, true);

	var acordes = {
		'orgao_do': new Pizzicato.Sound({ source: 'file', options: { path: '@Html.Raw(@Model.LinksDict["orgao_do"])', loop: true, release: 0.5, attack: 0.2 } }),
		'orgao_do#': new Pizzicato.Sound({ source: 'file', options: { path: '@Html.Raw(@Model.LinksDict["orgao_do#"])', loop: true, release: 0.5, attack: 0.2 } }),
		'orgao_re': new Pizzicato.Sound({ source: 'file', options: { path: '@Html.Raw(@Model.LinksDict["orgao_re"])', loop: true, release: 0.5, attack: 0.2 } }),
		'orgao_re#': new Pizzicato.Sound({ source: 'file', options: { path: '@Html.Raw(@Model.LinksDict["orgao_re#"])', loop: true, release: 0.5, attack: 0.2 } }),
		'orgao_mi': new Pizzicato.Sound({ source: 'file', options: { path: '@Html.Raw(@Model.LinksDict["orgao_mi"])', loop: true, release: 0.5, attack: 0.2 } }),
		'orgao_fa': new Pizzicato.Sound({ source: 'file', options: { path: '@Html.Raw(@Model.LinksDict["orgao_fa"])', loop: true, release: 0.5, attack: 0.2 } }),
		'orgao_fa#': new Pizzicato.Sound({ source: 'file', options: { path: '@Html.Raw(@Model.LinksDict["orgao_fa#"])', loop: true, release: 0.5, attack: 0.2 } }),
		'orgao_sol': new Pizzicato.Sound({ source: 'file', options: { path: '@Html.Raw(@Model.LinksDict["orgao_sol"])', loop: true, release: 0.5, attack: 0.2 } }),
		'orgao_sol#': new Pizzicato.Sound({ source: 'file', options: { path: '@Html.Raw(@Model.LinksDict["orgao_sol#"])', loop: true, release: 0.5, attack: 0.2 } }),
		'orgao_la': new Pizzicato.Sound({ source: 'file', options: { path: '@Html.Raw(@Model.LinksDict["orgao_la"])', loop: true, release: 0.5, attack: 0.2 } }),
		'orgao_la#': new Pizzicato.Sound({ source: 'file', options: { path: '@Html.Raw(@Model.LinksDict["orgao_la#"])', loop: true, release: 0.5, attack: 0.2 } }),
		'orgao_si': new Pizzicato.Sound({ source: 'file', options: { path: '@Html.Raw(@Model.LinksDict["orgao_si"])', loop: true, release: 0.5, attack: 0.2 } }),
		
		'orgao_do_baixo': new Pizzicato.Sound({ source: 'file', options: { path: '@Html.Raw(@Model.LinksDict["orgao_do_baixo"])', loop: true, release: 0.5, attack: 0.2 } }),
		'orgao_do#_baixo': new Pizzicato.Sound({ source: 'file', options: { path: '@Html.Raw(@Model.LinksDict["orgao_do#_baixo"])', loop: true, release: 0.5, attack: 0.2 } }),
		'orgao_re_baixo': new Pizzicato.Sound({ source: 'file', options: { path: '@Html.Raw(@Model.LinksDict["orgao_re_baixo"])', loop: true, release: 0.5, attack: 0.2 } }),
		'orgao_re#_baixo': new Pizzicato.Sound({ source: 'file', options: { path: '@Html.Raw(@Model.LinksDict["orgao_re#_baixo"])', loop: true, release: 0.5, attack: 0.2 } }),
		'orgao_mi_baixo': new Pizzicato.Sound({ source: 'file', options: { path: '@Html.Raw(@Model.LinksDict["orgao_mi_baixo"])', loop: true, release: 0.5, attack: 0.2 } }),
		'orgao_fa_baixo': new Pizzicato.Sound({ source: 'file', options: { path: '@Html.Raw(@Model.LinksDict["orgao_fa_baixo"])', loop: true, release: 0.5, attack: 0.2 } }),
		'orgao_fa#_baixo': new Pizzicato.Sound({ source: 'file', options: { path: '@Html.Raw(@Model.LinksDict["orgao_fa#_baixo"])', loop: true, release: 0.5, attack: 0.2 } }),
		'orgao_sol_baixo': new Pizzicato.Sound({ source: 'file', options: { path: '@Html.Raw(@Model.LinksDict["orgao_sol_baixo"])', loop: true, release: 0.5, attack: 0.2 } }),
		'orgao_sol#_baixo': new Pizzicato.Sound({ source: 'file', options: { path: '@Html.Raw(@Model.LinksDict["orgao_sol#_baixo"])', loop: true, release: 0.5, attack: 0.2 } }),
		'orgao_la_baixo': new Pizzicato.Sound({ source: 'file', options: { path: '@Html.Raw(@Model.LinksDict["orgao_la_baixo"])', loop: true, release: 0.5, attack: 0.2 } }),
		'orgao_la#_baixo': new Pizzicato.Sound({ source: 'file', options: { path: '@Html.Raw(@Model.LinksDict["orgao_la#_baixo"])', loop: true, release: 0.5, attack: 0.2 } }),
		'orgao_si_baixo': new Pizzicato.Sound({ source: 'file', options: { path: '@Html.Raw(@Model.LinksDict["orgao_si_baixo"])', loop: true, release: 0.5, attack: 0.2 } }),

		'strings_C': new Pizzicato.Sound({ source: 'file', options: { path: '@Html.Raw(@Model.LinksDict["strings_do"])', loop: true, release: 0.5, attack: 0.2 } }),
		'strings_C#': new Pizzicato.Sound({ source: 'file', options: { path: '@Html.Raw(@Model.LinksDict["strings_do#"])', loop: true, release: 0.5, attack: 0.2 } }),
		'strings_D': new Pizzicato.Sound({ source: 'file', options: { path: '@Html.Raw(@Model.LinksDict["strings_re"])', loop: true, release: 0.5, attack: 0.2 } }),
		'strings_D#': new Pizzicato.Sound({ source: 'file', options: { path: '@Html.Raw(@Model.LinksDict["strings_re#"])', loop: true, release: 0.5, attack: 0.2 } }),
		'strings_E': new Pizzicato.Sound({ source: 'file', options: { path: '@Html.Raw(@Model.LinksDict["strings_mi"])', loop: true, release: 0.5, attack: 0.2 } }),
		'strings_F': new Pizzicato.Sound({ source: 'file', options: { path: '@Html.Raw(@Model.LinksDict["strings_fa"])', loop: true, release: 0.5, attack: 0.2 } }),
		'strings_F#': new Pizzicato.Sound({ source: 'file', options: { path: '@Html.Raw(@Model.LinksDict["strings_fa#"])', loop: true, release: 0.5, attack: 0.2 } }),
		'strings_G': new Pizzicato.Sound({ source: 'file', options: { path: '@Html.Raw(@Model.LinksDict["strings_sol"])', loop: true, release: 0.5, attack: 0.2 } }),
		'strings_G#': new Pizzicato.Sound({ source: 'file', options: { path: '@Html.Raw(@Model.LinksDict["strings_sol#"])', loop: true, release: 0.5, attack: 0.2 } }),
		'strings_A': new Pizzicato.Sound({ source: 'file', options: { path: '@Html.Raw(@Model.LinksDict["strings_la"])', loop: true, release: 0.5, attack: 0.2 } }),
		'strings_A#': new Pizzicato.Sound({ source: 'file', options: { path: '@Html.Raw(@Model.LinksDict["strings_la#"])', loop: true, release: 0.5, attack: 0.2 } }),
		'strings_B': new Pizzicato.Sound({ source: 'file', options: { path: '@Html.Raw(@Model.LinksDict["strings_si"])', loop: true, release: 0.5, attack: 0.2 } }),

		'strings_C_baixo': new Pizzicato.Sound({ source: 'file', options: { path: '@Html.Raw(@Model.LinksDict["strings_do_baixo"])', loop: true, release: 0.5, attack: 0.2 } }),
		'strings_C#_baixo': new Pizzicato.Sound({ source: 'file', options: { path: '@Html.Raw(@Model.LinksDict["strings_do#_baixo"])', loop: true, release: 0.5, attack: 0.2 } }),
		'strings_D_baixo': new Pizzicato.Sound({ source: 'file', options: { path: '@Html.Raw(@Model.LinksDict["strings_re_baixo"])', loop: true, release: 0.5, attack: 0.2 } }),
		'strings_D#_baixo': new Pizzicato.Sound({ source: 'file', options: { path: '@Html.Raw(@Model.LinksDict["strings_re#_baixo"])', loop: true, release: 0.5, attack: 0.2 } }),
		'strings_E_baixo': new Pizzicato.Sound({ source: 'file', options: { path: '@Html.Raw(@Model.LinksDict["strings_mi_baixo"])', loop: true, release: 0.5, attack: 0.2 } }),
		'strings_F_baixo': new Pizzicato.Sound({ source: 'file', options: { path: '@Html.Raw(@Model.LinksDict["strings_fa_baixo"])', loop: true, release: 0.5, attack: 0.2 } }),
		'strings_F#_baixo': new Pizzicato.Sound({ source: 'file', options: { path: '@Html.Raw(@Model.LinksDict["strings_fa#_baixo"])', loop: true, release: 0.5, attack: 0.2 } }),
		'strings_G_baixo': new Pizzicato.Sound({ source: 'file', options: { path: '@Html.Raw(@Model.LinksDict["strings_sol_baixo"])', loop: true, release: 0.5, attack: 0.2 } }),
		'strings_G#_baixo': new Pizzicato.Sound({ source: 'file', options: { path: '@Html.Raw(@Model.LinksDict["strings_sol#_baixo"])', loop: true, release: 0.5, attack: 0.2 } }),
		'strings_A_baixo': new Pizzicato.Sound({ source: 'file', options: { path: '@Html.Raw(@Model.LinksDict["strings_la_baixo"])', loop: true, release: 0.5, attack: 0.2 } }),
		'strings_A#_baixo': new Pizzicato.Sound({ source: 'file', options: { path: '@Html.Raw(@Model.LinksDict["strings_la#_baixo"])', loop: true, release: 0.5, attack: 0.2 } }),
		'strings_B_baixo': new Pizzicato.Sound({ source: 'file', options: { path: '@Html.Raw(@Model.LinksDict["strings_si_baixo"])', loop: true, release: 0.5, attack: 0.2 } }),
	};

	function mudarParaFullscreen() {
		document.getElementById('exitfullscreen').style.display = 'flex';
		document.getElementById('fullscreen').style.display = 'none';
		document.getElementById('trackerControls').style.display = 'none';
		document.getElementById('divBateriaSwitch').style.display = 'none';
		document.getElementById('bateria').style.display = 'none';
		document.getElementById('voltar').style.display = 'none';

		var el = document.body;
		var requestMethod = el.requestFullScreen || el.webkitRequestFullScreen
			|| el.mozRequestFullScreen || el.msRequestFullScreen;

		if (requestMethod)
			requestMethod.call(el);

		document.getElementById('navBar').style.display = 'none';
	}

	function sairDeFullscreen() {
		document.getElementById('exitfullscreen').style.display = 'none';
		document.getElementById('trackerControls').style.display = 'block';
		document.getElementById('fullscreen').style.display = 'flex';
		document.exitFullscreen();
		document.getElementById('navBar').style.display = 'block';
		document.getElementById('voltar').style.display = 'block';
		//document.getElementById('divBateriaSwitch').style.display = 'block';
	}

	function esperarAudios(tempoMiliseg, esperar_audios) {
		if (esperar_audios == false) {
			document.getElementById('container').style.display = 'block';
			document.getElementById('tracker-container').style.display = 'block';
		}
		else
			setTimeout(function () {
				document.getElementById('container').style.display = 'block';
				document.getElementById('tracker-container').style.display = 'block';
		}, tempoMiliseg)
	}

	function deixarTomSelecionado(tom) {
		document.getElementById('tomSelect').value = tom;
	}

	function selecionarTomMenor(selecionadoMenor) {
		if (selecionadoMenor) {
			document.getElementById('textoAcordeMenor').style.color = 'black';
			document.getElementById('tomSelect').style.color = 'grey';
			document.getElementById('acorde_10').style.display = 'block';
			document.getElementById('acorde_7').style.display = 'block';
			document.getElementById('acorde_9').style.display = 'block';
		}
		else {
			document.getElementById('textoAcordeMenor').style.color = 'grey';
			document.getElementById('tomSelect').style.color = 'black';
			document.getElementById('acorde_10').style.display = 'none';
			document.getElementById('acorde_7').style.display = 'none';
			document.getElementById('acorde_9').style.display = 'none';
		}
	}

	var timer;
	function aumentarTom_click(aumentar) {
		if (timer)
			clearTimeout(timer);
		timer = setTimeout(function () {
			aumentarTom(aumentar, 1, "tomSelect");
		}, 250);
	}

	function aumentarTom_clickDuplo(aumentar) {
		clearTimeout(timer);
		aumentarTom(aumentar, 2, "tomSelect");
	}

	function gravar() {

	}
</script>